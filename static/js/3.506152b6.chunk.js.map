{"version":3,"sources":["components/Login/Login.module.css","components/Login/Login.jsx"],"names":["module","exports","LoginForm","props","onSubmit","handleSubmit","htmlFor","placeholder","name","type","validate","required","email","component","Input","className","s","error","disabled","submitting","reduxForm","form","connect","state","isLogin","auth","loginUser","to","password","remeberMe","captcha"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,MAAQ,uB,sICQtBC,EAAY,SAACC,GAEb,OACI,uBAAMC,SAAUD,EAAME,aAAtB,UACI,gCACI,uBAAOC,QAAQ,QAAf,oBACA,cAAC,IAAD,CAAOC,YAAY,QAAQC,KAAK,QAAQC,KAAK,OAAOC,SAAU,CAACC,IAAUC,KAAQC,UAAWC,SAGhG,gCACI,uBAAOR,QAAQ,WAAf,uBACA,cAAC,IAAD,CAAOE,KAAK,WAAWC,KAAK,WAAWC,SAAU,CAACC,KAAWE,UAAWC,SAG5E,gCACI,uBAAOR,QAAQ,QAAf,iCACA,cAAC,IAAD,CAAOE,KAAK,YAAYC,KAAK,WAAWI,UAAWC,SAEvD,qBAAKC,UAAWC,IAAEC,MAAlB,SAA0Bd,EAAMc,QAChC,wBAAQR,KAAK,SAASS,SAAUf,EAAMgB,WAAtC,wBAaZjB,EAAYkB,YAAU,CAClBC,KAAM,SADED,CAETlB,GAiBYoB,uBAzBO,SAACC,GACnB,MAAO,CACHC,QAASD,EAAME,KAAKD,WAuBY,CAAEE,eAA3BJ,EAdD,SAACnB,GAMX,OAAIA,EAAMqB,QAAgB,cAAC,IAAD,CAAUG,GAAI,aAEjC,qCACH,+CACA,cAACzB,EAAD,CAAWE,SARA,SAAC,GAA6C,IAA3CQ,EAA0C,EAA1CA,MAAOgB,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC1C3B,EAAMuB,UAAUd,EAAOgB,EAAUC,EAAWC","file":"static/js/3.506152b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__17Wu6\"};","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Field, reduxForm } from 'redux-form'\nimport { loginUser } from '../../redux/authReducer'\nimport { email, required } from '../../util/validators/validators'\nimport { Input } from '../common/FormsControls/FormsControls'\nimport s from './Login.module.css'\n\nlet LoginForm = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <label htmlFor='email'>Login:</label>\n                <Field placeholder='Email' name='email' type='text' validate={[required, email]} component={Input} />\n            </div>\n\n            <div>\n                <label htmlFor='password'>Password:</label>\n                <Field name='password' type='password' validate={[required]} component={Input} />\n            </div>\n\n            <div>\n                <label htmlFor='agree'> I agree with rules</label>\n                <Field name='remeberMe' type='checkbox' component={Input} />\n            </div>\n            <div className={s.error}>{props.error}</div>\n            <button type='submit' disabled={props.submitting}>Submit</button>\n        </form>\n    )\n}\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        isLogin: state.auth.isLogin\n    }\n}\n\nLoginForm = reduxForm({\n    form: 'login'\n})(LoginForm)\n\n\nconst Login = (props) => {\n\n    let onSubmit = ({ email, password, remeberMe, captcha }) => {\n        props.loginUser(email, password, remeberMe, captcha)\n    }\n\n    if (props.isLogin) return <Redirect to={'/profile'} />\n\n    return <>\n        <h1>Login, please</h1>\n        <LoginForm onSubmit={onSubmit} />\n    </>\n}\n\nexport default connect(mapStateToProps, { loginUser })(Login)"],"sourceRoot":""}